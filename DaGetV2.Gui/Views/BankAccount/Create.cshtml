@model DaGetV2.Gui.Models.BankAccountCreateModel
@using System.Linq;

@{
    Layout = "_layout";
}

<h1>Création d'un nouveau compte en banque</h1>
<hr />

<form action="Create" id="createBankAccountForm" method="post">

    @{
        int count = 0;
        @foreach (var bankAccountType in Model.BankAccountTypes)
        {
            <input type="hidden" name="BankAccountTypes[@count].Key" value="@bankAccountType.Key" />
            <input type="hidden" name="BankAccountTypes[@count].Value" value="@bankAccountType.Value" />

            count++;
        }
    }

    <div id="operationTypesToPost">
        @{
            count = 0;
            @foreach (var operationType in Model.OperationTypes)
            {
                <input type="hidden" name="OperationTypes[@count].Key" value="@operationType.Key" />

                <input type="hidden" name="OperationTypes[@count].Value" value="@operationType.Value" />

                count++;
            }
        }
    </div>

    <div class="row">
        <div class="col">

            <h3>Informations générales</h3>

            <div class="form-group">
                <label class="control-label">Libellé</label>
                @Html.TextBoxFor(model => model.Wording, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label class="control-label">Montant initial</label>
                @Html.TextBoxFor(model => model.InitialBalance, new { type = "number", step = "0.01", @class = "form-control" })
            </div>

            <div class="form-group">
                <label class="control-label">Type de compte</label>
                @Html.DropDownListFor(model => model.BankAccountTypeId, Model.BankAccountTypes.Select(bat => new SelectListItem(bat.Value, bat.Key.ToString())), null, new { @class = "form-control" })
            </div>

        </div>

        <div class="col">
            <h3>Types d'opération</h3>
            <br />
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            Libellé
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="operationTypeTableBody">
                    @foreach (var operationType in Model.OperationTypes)
                    {
                        <tr>
                            <td>
                                <input type="hidden" id="operationTypeId" value="@operationType.Key" />
                                <input type="text" id="operationTypeWording" class="form-control" value="@operationType.Value" />
                            </td>

                            <td>
                                <span><i onclick="deleteOperationType(this)" class="material-icons md-36" style="cursor: pointer;">delete_outline</i></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <button id="addOperationType" type="button" class="btn btn-lg btn-block btn-secondary">Nouveau type d'opération</button>

        </div>
        <div class="w-100"></div>

        <br />
        <div class="col-3">
            <a href="/Home/Index" class="btn btn-lg btn-secondary btn-block">Annuler</a>
        </div>
        <div class="col-9">
            <input id="postForm" value="Valider" class="btn btn-lg btn-primary btn-block" />
        </div>

    </div>
</form>

@section Scripts{
    <script src="~/js/createBankAccount.js"></script>
}
